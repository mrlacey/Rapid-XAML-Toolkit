<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Info_IntializingCommands" xml:space="preserve">
    <value>Initializing Commands (v{0})</value>
    <comment>Info mesage when package initialized</comment>
  </data>
  <data name="Error_UnableToFindProjectInSolution" xml:space="preserve">
    <value>Unable to find project '{0}' in the solution.</value>
  </data>
  <data name="Info_AddedRowDefsCount" xml:space="preserve">
    <value>Adding {0} row definitions.</value>
  </data>
  <data name="UI_AddedXamlToToolbox" xml:space="preserve">
    <value>Added XAML to toolbox for {0}</value>
  </data>
  <data name="Info_AddingColDefsToGrid" xml:space="preserve">
    <value>Adding ColumnDefinitions to grid.</value>
  </data>
  <data name="Info_AddingGridToOutput" xml:space="preserve">
    <value>Adding Grid to output.</value>
  </data>
  <data name="Info_AddingPropertyToOutput" xml:space="preserve">
    <value>Adding '{0}' to the output.</value>
  </data>
  <data name="Info_AnalyzingCSharpCode" xml:space="preserve">
    <value>Analyzing C# code. (v{0})</value>
  </data>
  <data name="Info_AnalyzingVisualBasicCode" xml:space="preserve">
    <value>Analyzing VB code.  (v{0})</value>
  </data>
  <data name="Info_AttemptingToAddToToolbox" xml:space="preserve">
    <value>Attempting to add XAML to the Toolbox.</value>
  </data>
  <data name="Info_AttemptingToCopy" xml:space="preserve">
    <value>Attempting to copy XAML to clipboard.</value>
  </data>
  <data name="Info_AttemptingToCreateView" xml:space="preserve">
    <value>Attempting to create View.</value>
  </data>
  <data name="Info_CannotGetPropertiesForKnownType" xml:space="preserve">
    <value>Cannot get sub-properties for known type '{0}'.</value>
  </data>
  <data name="Info_ClassNoPublicProperties" xml:space="preserve">
    <value>Class contains no public properties.</value>
  </data>
  <data name="Info_ClassPropertyCount" xml:space="preserve">
    <value>Class contains {0} properties.</value>
  </data>
  <data name="Info_CopiedXaml" xml:space="preserve">
    <value>Copied XAML for {0}: {1}</value>
  </data>
  <data name="Info_CreatedView" xml:space="preserve">
    <value>Created file {0}</value>
  </data>
  <data name="Info_DocumentPropertyCount" xml:space="preserve">
    <value>Document contains {0} properties.</value>
  </data>
  <data name="Info_EnumElementCount" xml:space="preserve">
    <value>Found {0} elements of enum.</value>
  </data>
  <data name="Info_FailedToGetNullableType" xml:space="preserve">
    <value>Failed to get typeSymbol of property '{0}' assumed to have been nullable.</value>
  </data>
  <data name="Info_FileExists" xml:space="preserve">
    <value>File '{0}' already exists.</value>
  </data>
  <data name="Info_FormattingOutputForGenericType" xml:space="preserve">
    <value>Formatting output for generic type '{0}'.</value>
  </data>
  <data name="Info_FormattingOutputForNonGenericType" xml:space="preserve">
    <value>Formatting output for non-generic type '{0}'.</value>
  </data>
  <data name="Info_FormattingOutputForProperty" xml:space="preserve">
    <value>Formatting output for property '{0}'.</value>
  </data>
  <data name="Info_FormattingSubpropertiesInsideGrid" xml:space="preserve">
    <value>Formatting subproperties inside a grid.</value>
  </data>
  <data name="Info_FoundEnumMapping" xml:space="preserve">
    <value>Found mapping for '{0}' as an Enum.</value>
  </data>
  <data name="Info_FoundPropertyCount" xml:space="preserve">
    <value>Found {0} subproperties.</value>
  </data>
  <data name="Info_FoundSubProperty" xml:space="preserve">
    <value>Found sub-property '{0}'.</value>
  </data>
  <data name="Info_FoundSubPropertyOfUnknownType" xml:space="preserve">
    <value>Found sub-property of unknown type: {0}.</value>
  </data>
  <data name="Info_GetSelectionOutput" xml:space="preserve">
    <value>Getting output for the selection.</value>
  </data>
  <data name="Info_GetSingleClassOutput" xml:space="preserve">
    <value>Getting output for the class.</value>
  </data>
  <data name="Info_GetSingleItemOutput" xml:space="preserve">
    <value>Getting output for a single item.</value>
  </data>
  <data name="Info_GetSinglePropertyOutput" xml:space="preserve">
    <value>Getting output for a single property.</value>
  </data>
  <data name="Info_GettingGenericType" xml:space="preserve">
    <value>Getting a generic type.</value>
  </data>
  <data name="Info_GettingSubPropertyOutput" xml:space="preserve">
    <value>Getting sub-property output for '{0}'.</value>
  </data>
  <data name="Info_IdentifiedPropertySummary" xml:space="preserve">
    <value>Identified property as Name='{0}' Type='{1}' IsReadOnly='{2}'.</value>
  </data>
  <data name="Info_LookingForReadWriteMappings" xml:space="preserve">
    <value>Looking for mappings that are not read-only.</value>
  </data>
  <data name="Info_NoEnumMappingFound" xml:space="preserve">
    <value>No mapping found for '{0}' as an Enum so now checking by type name.</value>
  </data>
  <data name="Info_NoMappingFoundUsingFallback" xml:space="preserve">
    <value>No mapping found so using fallback output.</value>
  </data>
  <data name="Info_NoPropertiesToOutput" xml:space="preserve">
    <value>No properties to provide output for.</value>
  </data>
  <data name="UI_NothingAddedToToolbox" xml:space="preserve">
    <value>No XAML added to toolbox.</value>
  </data>
  <data name="Info_NothingToCopy" xml:space="preserve">
    <value>Nothing to copy to clipboard.</value>
  </data>
  <data name="Info_NotIncludingExcludedProperty" xml:space="preserve">
    <value>Not including property '{0}' as it's on the exclusion list.</value>
  </data>
  <data name="Info_NotOverwritingFile" xml:space="preserve">
    <value>Not overwriting '{0}'.</value>
  </data>
  <data name="Info_NoViewCreated" xml:space="preserve">
    <value>No view created.</value>
  </data>
  <data name="Info_NoXamlCopied" xml:space="preserve">
    <value>No XAML copied.</value>
  </data>
  <data name="Info_OverwritingFile" xml:space="preserve">
    <value>Overwriting '{0}'.</value>
  </data>
  <data name="Info_PropertiesInSelectedAreaCount" xml:space="preserve">
    <value>{0} properties within the selection area.</value>
  </data>
  <data name="Info_PropertyIsReadOnly" xml:space="preserve">
    <value>Property is read-only so looking for read-only mappings first.</value>
  </data>
  <data name="Info_PropertyTypeHasNoSubProperties" xml:space="preserve">
    <value>'{0}' is of type '{1}' which has has no sub-properties.</value>
  </data>
  <data name="Info_PropertyTypeNotRecognizedAsGeneric" xml:space="preserve">
    <value>'{0}' not recognized as generic.</value>
  </data>
  <data name="Info_PropertyIsNotReadOnly" xml:space="preserve">
    <value>Property is not read-only so filtering out read-only mappings.</value>
  </data>
  <data name="Info_ReplacingIncIntPlaceholder" xml:space="preserve">
    <value>Replacing incrementing integer placeholder.</value>
  </data>
  <data name="Info_ReplacingRepIntPlaceholder" xml:space="preserve">
    <value>Replacing repeated integer placeholder.</value>
  </data>
  <data name="Info_ReturningOutput" xml:space="preserve">
    <value>Returning: {0}</value>
  </data>
  <data name="Info_SearchingForMappingWithGenericWildcard" xml:space="preserve">
    <value>Searching for mapping for generic type treated as '{0}'.</value>
  </data>
  <data name="Info_SubpropertyCount" xml:space="preserve">
    <value>Property '{0}' has {1} sub-properties.</value>
  </data>
  <data name="Info_UnableToAccessTelemetry" xml:space="preserve">
    <value>Unable to load the assembly 'Microsoft.VisualStudio.Telemetry' so telemetry will not be enabled.</value>
  </data>
  <data name="Info_UsingClassGrouping" xml:space="preserve">
    <value>Using class grouping of '{0}'.</value>
  </data>
  <data name="Prompt_ConfirmDeleteProfileMessage" xml:space="preserve">
    <value>Are you sure you want to delete profile '{0}'?</value>
  </data>
  <data name="Prompt_ConfirmDeleteProfileTitle" xml:space="preserve">
    <value>Confirm deletion</value>
  </data>
  <data name="Prompt_ConfirmResetProfilesMessage" xml:space="preserve">
    <value>Resetting profiles will cause you to lose any changes. Are you sure?</value>
  </data>
  <data name="Prompt_ConfirmResetProfilesTitle" xml:space="preserve">
    <value>Confirm reset</value>
  </data>
  <data name="Prompt_FileExistsTitle" xml:space="preserve">
    <value>File already exists</value>
  </data>
  <data name="Prompt_FileExistsMessage" xml:space="preserve">
    <value>Do you want to override the existing file?</value>
  </data>
  <data name="UI_NoPropertiesXaml" xml:space="preserve">
    <value>&lt;!-- No accessible properties found for XAML in '{0}' --&gt;</value>
  </data>
  <data name="UI_ProfileFilterDescription" xml:space="preserve">
    <value>Rapid XAML Profile</value>
  </data>
  <data name="UI_SelectionMoreThanThreeNames" xml:space="preserve">
    <value>{0}, {1} and {2} other members</value>
  </data>
  <data name="UI_SelectionThreeNames" xml:space="preserve">
    <value>{0}, {1} and 1 other member</value>
  </data>
  <data name="UI_SelectionTwoNames" xml:space="preserve">
    <value>{0} and {1}</value>
  </data>
  <data name="Prompt_ImportFailedMessage" xml:space="preserve">
    <value>The following issues prevented the profile from being imported:

- {0}</value>
  </data>
  <data name="Prompt_ImportFailedTitle" xml:space="preserve">
    <value>Unable to import profile</value>
  </data>
  <data name="Error_AccessingOutputPaneFailed" xml:space="preserve">
    <value>Failed to get the Output window pane.</value>
  </data>
  <data name="UI_ActiveProfileName" xml:space="preserve">
    <value>{0}    [*ACTIVE*]</value>
  </data>
  <data name="UI_CopiedProfileName" xml:space="preserve">
    <value>{0} (copy)</value>
  </data>
  <data name="Error_CreatingOutputPaneFailed" xml:space="preserve">
    <value>Failed to create the Output window pane.</value>
  </data>
  <data name="UI_NewProfileDefaultName" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="UI_NoXamlCopiedNoProfilesConfigured" xml:space="preserve">
    <value>No XAML copied. No profiles configured.</value>
  </data>
  <data name="UI_RxtOutputPaneTitle" xml:space="preserve">
    <value>Rapid XAML Toolkit</value>
  </data>
  <data name="UI_ToolboxGroupHeader" xml:space="preserve">
    <value>Rapid XAML</value>
  </data>
  <data name="RapidXamlToolkit" xml:space="preserve">
    <value>Rapid XAML Toolkit</value>
    <comment>project name</comment>
  </data>
  <data name="UI_UndoContextInsertRowDef" xml:space="preserve">
    <value>Insert RowDefinition</value>
  </data>
  <data name="Info_UnableToInsertRowDefinitionInvalidXaml" xml:space="preserve">
    <value>Unable to insert RowDefinition (Invalid XAML)</value>
  </data>
  <data name="Info_PropertyCannotBeAnalyzed" xml:space="preserve">
    <value>Unable to analyze property '{0}'.</value>
  </data>
  <data name="Info_CouldNotFindClassInFile" xml:space="preserve">
    <value>Unable to find class definition in file '{0}'</value>
  </data>
  <data name="Info_ProblemsInstructionsAndLink" xml:space="preserve">
    <value>If you have problems with this extension, or suggestions for improvement, report them at https://github.com/mrlacey/Rapid-XAML-Toolkit/issues/new/choose </value>
  </data>
  <data name="UI_UndoContextAddColumnDefinitions" xml:space="preserve">
    <value>Add ColumnDefinitions</value>
  </data>
  <data name="UI_UndoContextAddRowAndColumnDefinitions" xml:space="preserve">
    <value>Add RowDefinitions and ColumnDefinitions</value>
  </data>
  <data name="UI_UndoContextAddRowDefinitions" xml:space="preserve">
    <value>Add RowDefinitions</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringButtonContentMessage" xml:space="preserve">
    <value>Button contains hard-coded Content value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringExtendedMessage" xml:space="preserve">
    <value>Do not use hard-coded values. Use a localized resource instead.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringTextblockTextMessage" xml:space="preserve">
    <value>TextBlock contains hard-coded Text value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringTooltip" xml:space="preserve">
    <value>Extract hard-coded string to resource file.</value>
  </data>
  <data name="UI_AddColumnDefinitions" xml:space="preserve">
    <value>Add ColumnDefinitions</value>
  </data>
  <data name="UI_AddRowAndColumnDefinitions" xml:space="preserve">
    <value>Add RowDefinitions and ColumnDefinitions</value>
  </data>
  <data name="UI_AddRowDefinitions" xml:space="preserve">
    <value>Add RowDefinitions</value>
  </data>
  <data name="UI_InsertNewDefinitionForRow" xml:space="preserve">
    <value>Insert new definition for row {this.tag.RowId}</value>
  </data>
  <data name="UI_MoveHardCodedString" xml:space="preserve">
    <value>Move hard-coded string to resource file.</value>
  </data>
  <data name="Error_XamlAnalysisDescription" xml:space="preserve">
    <value>Unexpected error occurred while parsing XAML. (v{0})</value>
  </data>
  <data name="Error_XamlAnalysisExtendedMessage" xml:space="preserve">
    <value>Please log an issue to https://github.com/mrlacey/Rapid-XAML-Toolkit/issues Reason: {0}</value>
  </data>
  <data name="UI_UndoContextAddMissingColumnDefinitions" xml:space="preserve">
    <value>Add missing column definitions</value>
  </data>
  <data name="UI_UndoContextAddMissingRowDefinitions" xml:space="preserve">
    <value>Add missing row definitions</value>
  </data>
  <data name="UI_XamlAnalysisMissingColumnDefinitionDescription" xml:space="preserve">
    <value>Use of undefined Column '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisMissingColumnDefinitionExtendedMessage" xml:space="preserve">
    <value>The use of undefined columns can lead to unexpected layout behavior. It can also be confusing for other people looking at the code.</value>
  </data>
  <data name="UI_XamlAnalysisMissingColumnDefinitionTooltip" xml:space="preserve">
    <value>No corresponding column definition</value>
  </data>
  <data name="UI_XamlAnalysisMissingRowDefinitionDescription" xml:space="preserve">
    <value>Use of undefined Row '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisMissingRowDefinitionExtendedMessage" xml:space="preserve">
    <value>The use of undefined rows can lead to unexpected layout behavior. It can also be confusing for other people looking at the code.</value>
  </data>
  <data name="UI_XamlAnalysisMissingRowDefinitionTooltip" xml:space="preserve">
    <value>No corresponding row definition</value>
  </data>
  <data name="UI_AddMissingColumnDefinitions" xml:space="preserve">
    <value>Add missing column definitions.</value>
  </data>
  <data name="UI_AddMissingRowDefinitions" xml:space="preserve">
    <value>Add missing row definitions.</value>
  </data>
  <data name="UI_UndoContextMoveStringToResourceFile" xml:space="preserve">
    <value>Move string to resource file</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringTextboxHeaderMessage" xml:space="preserve">
    <value>TextBox contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringTextboxPlaceholderMessage" xml:space="preserve">
    <value>TextBox contains hard-coded PlaceholderText value '{0}'.</value>
  </data>
  <data name="Info_NoResourceFileFound" xml:space="preserve">
    <value>No resource file was found in the project. Add one and then try again.</value>
  </data>
  <data name="UI_UndoContextAddEntryKeyboard" xml:space="preserve">
    <value>Add Keyboard property.</value>
  </data>
  <data name="UI_XamlAnalysisEntryWithoutKeyboardDescription" xml:space="preserve">
    <value>Keyboard is not specified for the Entry.</value>
  </data>
  <data name="UI_XamlAnalysisEntryWithoutKeyboardExtendedMessage" xml:space="preserve">
    <value>Specifying the keyboard can make it easier for the user to enter the correct value. </value>
  </data>
  <data name="UI_AddEntryKeyboard" xml:space="preserve">
    <value>Specify Keyboard property as {0}</value>
  </data>
  <data name="UI_UndoContextAddTextBoxInputScope" xml:space="preserve">
    <value>Add InputScope property.</value>
  </data>
  <data name="UI_XamlAnalysisTextBoxWithoutInputScopeDescription" xml:space="preserve">
    <value>InputScope is not specified for the TextBox.</value>
  </data>
  <data name="UI_XamlAnalysisTextBoxWithoutInputScopeExtendedMessage" xml:space="preserve">
    <value>Specifying the InputScope can make it easier for the user to enter the correct value. </value>
  </data>
  <data name="UI_AddTextBoxInputScope" xml:space="preserve">
    <value>Specify InputScope property.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringAppBarButtonLabelMessage" xml:space="preserve">
    <value>AppBarButton contains hard-coded Label value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringAppBarToggleButtonLabelMessage" xml:space="preserve">
    <value>AppBarToggleButton contains hard-coded Label value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringAutoSuggestBoxHeaderMessage" xml:space="preserve">
    <value>AutoSuggestBox contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringAutoSuggestBoxPlaceHolderMessage" xml:space="preserve">
    <value>AutoSuggestBox contains hard-coded Placeholder value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringCalendarDatePickerDescriptionMessage" xml:space="preserve">
    <value>CalendarDatePicker contains hard-coded Description value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringCalendarDatePickerHeaderMessage" xml:space="preserve">
    <value>CalendarDatePicker contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringCheckboxContentMessage" xml:space="preserve">
    <value>CheckBox contains hard-coded Content value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringComboboxHeaderMessage" xml:space="preserve">
    <value>ComboBox contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringDatePickerHeaderMessage" xml:space="preserve">
    <value>DatePicker contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringHubHeaderMessage" xml:space="preserve">
    <value>Hub contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringHubSectionHeaderMessage" xml:space="preserve">
    <value>HubSection contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringHyperlinkButtonContentMessage" xml:space="preserve">
    <value>HyperlinkButton contains hard-coded Content value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringMenuFlyoutItemTextMessage" xml:space="preserve">
    <value>MenuFlyoutItem contains hard-coded Text value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringMenuFlyoutSubItemTextMessage" xml:space="preserve">
    <value>MenuFlyoutSubItem contains hard-coded Text value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringPivotItemHeaderMessage" xml:space="preserve">
    <value>PivotItem contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringPivotTitleMessage" xml:space="preserve">
    <value>Pivot contains hard-coded Title value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringRepeatButtonContentMessage" xml:space="preserve">
    <value>RepeatButton contains hard-coded Content value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringRichEditBoxHeaderMessage" xml:space="preserve">
    <value>RichEditBox contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringTimePickerHeaderMessage" xml:space="preserve">
    <value>TimePicker contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringToggleMenuFlyoutItemTextMessage" xml:space="preserve">
    <value>ToggleMenuFlyoutItem contains hard-coded Text value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringToggleSwitchHeaderMessage" xml:space="preserve">
    <value>ToggleSwitch contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringToggleSwitchOffContentMessage" xml:space="preserve">
    <value>ToggleSwitch contains hard-coded OffContent value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringToggleSwitchOnContentMessage" xml:space="preserve">
    <value>ToggleSwitch contains hard-coded OnContent value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringLabelTextMessage" xml:space="preserve">
    <value>Label contains hard-coded Text value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringSliderHeaderMessage" xml:space="preserve">
    <value>Slider contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisColumnSpanOverflowDescription" xml:space="preserve">
    <value>Attempting to use more than the defined number of columns.</value>
  </data>
  <data name="UI_XamlAnalysisColumnSpanOverflowTooltip" xml:space="preserve">
    <value>Attempting to span more columns than are defined.</value>
  </data>
  <data name="UI_XamlAnalysisRowSpanOverflowDescription" xml:space="preserve">
    <value>Attempting to use more than the defined number of rows.</value>
  </data>
  <data name="UI_XamlAnalysisRowSpanOverflowTooltip" xml:space="preserve">
    <value>Attempting to span more rows than are defined.</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringPasswordboxHeaderMessage" xml:space="preserve">
    <value>PasswordBox contains hard-coded Header value '{0}'.</value>
  </data>
  <data name="UI_XamlAnalysisCheckBoxCheckedAndUncheckedEventsDescription" xml:space="preserve">
    <value>Handle both `Checked` and `Unchecked` events if handle one.</value>
  </data>
  <data name="UI_XamlAnalysisCheckBoxCheckedAndUncheckedEventsExtendedMessage" xml:space="preserve">
    <value>The Checked and Unchecked events occur independently. If you handle these events, you should handle both of them to respond to state changes in the check box.</value>
  </data>
  <data name="UI_XamlAnalysisCheckBoxCheckedAndUncheckedEventsToolTip" xml:space="preserve">
    <value>Handle both `Checked` and `Unchecked` events.</value>
  </data>
  <data name="UI_XamlAnalysisUseMediaPlayerElementDescription" xml:space="preserve">
    <value>Use MediaPlayerElement in place of MediaElement.</value>
  </data>
  <data name="UI_XamlAnalysisUseMediaPlayerElementExtendedMessage" xml:space="preserve">
    <value>It is recommend that you use MediaPlayerElement in place of MediaElement. MediaPlayerElement has the same functionality as MediaElement, while also enabling more advanced media playback scenarios. Additionally, all future improvements in media playback will happen in MediaPlayerElement.</value>
  </data>
  <data name="UI_XamlAnalysisUseMediaPlayerElementToolTip" xml:space="preserve">
    <value>Use MediaPlayerElement in place of MediaElement.</value>
  </data>
  <data name="UI_XamlAnalysisNameTitleCaseDescription" xml:space="preserve">
    <value>Name should begin with an upper case character: {0}</value>
  </data>
  <data name="UI_XamlAnalysisNameTitleCaseToolTip" xml:space="preserve">
    <value>Name value should begin with an upper case character.</value>
  </data>
  <data name="UI_XamlAnalysisUidTitleCaseDescription" xml:space="preserve">
    <value>Uid should begin with an upper case character: {0}</value>
  </data>
  <data name="UI_XamlAnalysisUidTitleCaseToolTip" xml:space="preserve">
    <value>Uid value should begin with an upper case character.</value>
  </data>
  <data name="UI_AddMissingEvent" xml:space="preserve">
    <value>Add missing event.</value>
  </data>
  <data name="UI_ChangeToMediaPlayerElement" xml:space="preserve">
    <value>Change to MediaPlayerElement.</value>
  </data>
  <data name="UI_CapitalizeFirstLetterOfName" xml:space="preserve">
    <value>Capitalize first letter of Name</value>
  </data>
  <data name="UI_CapitalizeFirstLetterOfUid" xml:space="preserve">
    <value>Capitalize first letter of Uid</value>
  </data>
  <data name="UI_XamlAnalysisSetBindingModeToTwoWayDescription" xml:space="preserve">
    <value>To receive notification of selection changes, set BindingMode to TwoWay.</value>
  </data>
  <data name="UI_SetBindingModeToTwoWay" xml:space="preserve">
    <value>Set BindingMode to TwoWay.</value>
  </data>
  <data name="UI_XamlAnalysisSetBindingModeToTwoWayToolTip" xml:space="preserve">
    <value>Set BindingMode to TwoWay to be notified of changes.</value>
  </data>
  <data name="UI_UndoContextMoveStringsToResourceFile" xml:space="preserve">
    <value>Move all strings to resource file</value>
  </data>
  <data name="UI_FallBackActiveProfileName" xml:space="preserve">
    <value>{0}    [*FALLBACK*][*ACTIVE*]</value>
  </data>
  <data name="UI_FallBackProfileName" xml:space="preserve">
    <value>{0}    [*FALLBACK*]</value>
  </data>
  <data name="Info_DetectedProjectType" xml:space="preserve">
    <value>Detected project type as '{0}'.</value>
  </data>
  <data name="Info_UsingProfile" xml:space="preserve">
    <value>Using profile '{0}'.</value>
  </data>
  <data name="Error_OutdatedConfigurationDetected2" xml:space="preserve">
    <value>Out-dated configuration detected. See https://github.com/mrlacey/Rapid-XAML-Toolkit/blob/main/CHANGELOG.md</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringPasswordboxDescriptionMessage" xml:space="preserve">
    <value>PasswordBox contains hard-coded Description value '{0};</value>
  </data>
  <data name="Info_FileDropped" xml:space="preserve">
    <value>Dropping '{0}' onto view.</value>
  </data>
  <data name="Error_UnableToGetDropHandler" xml:space="preserve">
    <value>Failed to load Drop Handler as extension not yet loaded.</value>
  </data>
  <data name="UI_ExpandAutoPropertyAnalyzerMessage" xml:space="preserve">
    <value>Expand property '{0}'</value>
  </data>
  <data name="UI_ExpandAutoPropertyAnalyzerTitle" xml:space="preserve">
    <value>Property can be expanded</value>
  </data>
  <data name="UI_AnalyzerFixDependencyPropertyTitle" xml:space="preserve">
    <value>To dependency property</value>
  </data>
  <data name="UI_AnalyzerFixOnPropertyChangedTitle" xml:space="preserve">
    <value>To full property that calls `OnPropertyChanged`</value>
  </data>
  <data name="UI_AnalyzerFixSetPropertyTitle" xml:space="preserve">
    <value>To full property that calls `SetProperty`</value>
  </data>
  <data name="UI_AnalyzerFixSetTitle" xml:space="preserve">
    <value>To full property that calls `Set`</value>
  </data>
  <data name="UI_XamlAnalysisHardcodedStringTooltipServiceToolTipMessage" xml:space="preserve">
    <value>TooltipService contains hard-coded ToolTip value '{0}'.</value>
  </data>
  <data name="Info_AddingAttributeFallback" xml:space="preserve">
    <value>Adding attribute fallback.</value>
  </data>
  <data name="Info_AttributeNotFoundOnProperty" xml:space="preserve">
    <value>Attribute not found on property.</value>
  </data>
  <data name="Info_AttributeParameterWithoutIndex" xml:space="preserve">
    <value>Attribute parameter with index '{0}' not found.</value>
  </data>
  <data name="Info_FoundAttributeArgument" xml:space="preserve">
    <value>Found attribute argument: '{0}'='{1}'</value>
  </data>
  <data name="Info_NamedAttributeParameterNotFound" xml:space="preserve">
    <value>Attribute parameter named '{0}' not found.</value>
  </data>
  <data name="Info_NoArgumentsForAttribute" xml:space="preserve">
    <value>No arguments for attribute.</value>
  </data>
  <data name="Info_OutputContainsAttributePlaceholder" xml:space="preserve">
    <value>Output contains placeholder for attribute '{0}'</value>
  </data>
  <data name="Info_UnexpectedPropertyType" xml:space="preserve">
    <value>Unexpected property type '{0}' cannot be converted to XAML.</value>
  </data>
  <data name="Info_FeatureUsage" xml:space="preserve">
    <value>Feature used: {0}</value>
  </data>
  <data name="Info_FormattingRawOutput" xml:space="preserve">
    <value>Output template: '{0}'</value>
  </data>
  <data name="Info_KnownAttributes" xml:space="preserve">
    <value>Known attributes: {0}</value>
  </data>
  <data name="Info_UnableToDetermineIfExtendedOutputEnabled" xml:space="preserve">
    <value>Unable to determine if extended output is enabled so assuming it is.</value>
  </data>
  <data name="Info_AddingMemberToOutput" xml:space="preserve">
    <value>Adding '{0}' to the output.</value>
  </data>
  <data name="Info_DocumentMethodCount" xml:space="preserve">
    <value>Document contains {0} methods.</value>
  </data>
  <data name="Info_FormattingOutputForMethod" xml:space="preserve">
    <value>Formatting output for method '{0}'</value>
  </data>
  <data name="Info_GetSingleMethodOutput" xml:space="preserve">
    <value>Getting output for a single method.</value>
  </data>
  <data name="Info_MethodsInSelectedAreaCount" xml:space="preserve">
    <value>{0} methods within the selection area.</value>
  </data>
  <data name="Info_NoMappingFoundForMethod" xml:space="preserve">
    <value>No mapping found for {0} so no output being generated.</value>
  </data>
  <data name="Info_NoMembersToOutput" xml:space="preserve">
    <value>No properties or methods to provide output for.</value>
  </data>
  <data name="Info_CannotGetMethodsForKnownType" xml:space="preserve">
    <value>Cannot get sub-members for known type '{0}'</value>
  </data>
  <data name="Info_FoundSubMethodOfUnknownType" xml:space="preserve">
    <value>Found sub-method of unknown type: {0}</value>
  </data>
  <data name="Info_UnexpectedMethodType" xml:space="preserve">
    <value>Unexpected method type '{0}' cannot be converted to XAML.</value>
  </data>
  <data name="Info_LaunchVersionAnalysis" xml:space="preserve">
    <value>Rapid XAML Analysis (v{0})</value>
  </data>
  <data name="Info_LaunchVersionGeneration" xml:space="preserve">
    <value>Rapid XAML Generation (v{0})</value>
  </data>
  <data name="Info_LaunchVersionRoslynAnalyzers" xml:space="preserve">
    <value>Rapid XAML Roslyn Analyzers (v{0})</value>
  </data>
  <data name="UI_SuggestedActionSetTitle" xml:space="preserve">
    <value>Rapid XAML</value>
  </data>
  <data name="Info_FileNameMissingFromTag" xml:space="preserve">
    <value>FileName missing from tag</value>
  </data>
  <data name="Info_SnapshotVersionChanged" xml:space="preserve">
    <value>Snapshot version has changed-invalidating cache for '{0}'.</value>
  </data>
  <data name="UI_SuggestedActionDoNotWarn" xml:space="preserve">
    <value>Do not warn about {0}.</value>
  </data>
  <data name="Info_TextBufferChanged" xml:space="preserve">
    <value>TextBuffer has changed-invalidating cache for '{0}'.</value>
  </data>
  <data name="Info_UnableToFindProjectContainingFile" xml:space="preserve">
    <value>Unable to find project containing file '{0}'.</value>
  </data>
  <data name="Error_ExceptionHeader" xml:space="preserve">
    <value>Exception</value>
  </data>
  <data name="Error_ExceptionHeaderUnderline" xml:space="preserve">
    <value>=========</value>
  </data>
  <data name="Error_FailedToGetIComponentModel" xml:space="preserve">
    <value>Failed to get IComponentModel in BaseCommand.GetEditorAdaptersFactoryServiceAsync</value>
  </data>
  <data name="Error_FailedToGetIVsTextManager4" xml:space="preserve">
    <value>Failed to get IVsTextManager4 in BaseCommand.GetXamlIndentAsync</value>
  </data>
  <data name="Error_FailedToGetIVsTextManager4InVisualStudioAbstraction.GetXamlIndentAsync" xml:space="preserve">
    <value>Failed to get IVsTextManager4 in VisualStudioAbstraction.GetXamlIndentAsync</value>
  </data>
  <data name="Error_FailedToImportCustomAnalyzers" xml:space="preserve">
    <value>Failed to import CustomAnalyzers.</value>
  </data>
  <data name="Error_FailedToLoadSuppressionsAnalysisFile" xml:space="preserve">
    <value>Failed to load 'suppressions.xamlAnalysis' file.</value>
  </data>
  <data name="Error_FailedToGetDteInGetXamlAsync" xml:space="preserve">
    <value>Failed to get DTE in GetXamlFromCodeWindowBaseCommand.GetXamlAsync</value>
  </data>
  <data name="Error_FailedToGetDteInShowStatusBarMessageAsync" xml:space="preserve">
    <value>Failed to get DTE in GetXamlFromCodeWindowBaseCommand.ShowStatusBarMessageAsync</value>
  </data>
  <data name="Error_ErrorInCustomAnalyzer" xml:space="preserve">
    <value>Error in Custom Analyzer '{0}'.</value>
  </data>
  <data name="Error_FailedToLoadAssemblyMEF" xml:space="preserve">
    <value>"Failed to load '{0}' to look for CustomAnalyzers."</value>
  </data>
  <data name="UI_AnalyzerFixBindablePropertyTitle" xml:space="preserve">
    <value>To bindable property</value>
  </data>
  <data name="Info_PackageLoad" xml:space="preserve">
    <value>Loading{0}{1}</value>
  </data>
  <data name="UI_UndoContextAddMaxLangthProperty" xml:space="preserve">
    <value>Add MaxLength property.</value>
  </data>
  <data name="UI_XamlAnalysisGenericHardCodedStringDescription" xml:space="preserve">
    <value>{0} contains hard-coded {1} value '{2}'.</value>
  </data>
  <data name="UI_XamlAnalysisPasswordWithoutMaxLengthDescription" xml:space="preserve">
    <value>It is a general recommendation to include a maximum length for password capture.</value>
  </data>
  <data name="UI_XamlAnalysisPasswordWithoutMaxLengthExtendedMessage" xml:space="preserve">
    <value>While short passwords are not recommended, allowing entry of infinite length can lead to a bad user experience, and has been known to be a security attack vector when the password is checked or passed to another system for validation.</value>
  </data>
  <data name="UI_UndoContextAddAutomationDescription" xml:space="preserve">
    <value>Add automation description.</value>
  </data>
  <data name="UI_UndoContextExcludeFromAutomation" xml:space="preserve">
    <value>Exclude from accessible view.</value>
  </data>
  <data name="UI_XamlAnalysisImageAccessibilityDescription" xml:space="preserve">
    <value>Image lacks accessibility consideration</value>
  </data>
  <data name="UI_XamlAnalysisImageAccessibilityExtendedMessage" xml:space="preserve">
    <value>If the image contains content that is useful to the user a description should be made available to accessibility tools. If the image does not contain useful content it should be excluded from the accessible view.</value>
  </data>
  <data name="UI_XamlAnalysisImageButtonAccessibilityDescription" xml:space="preserve">
    <value>Add a description to help anyone who can't see or understand the image.</value>
  </data>
  <data name="Info_UsedFeatureParseDocument" xml:space="preserve">
    <value>DocumentParsed_TagsFound{0}</value>
  </data>
  <data name="UI_XamlAnalysisFixUnavailable" xml:space="preserve">
    <value>Sorry, an automated fix for this issue is not currently available.</value>
  </data>
  <data name="Info_PromptToDisableAnalysisOnSave" xml:space="preserve">
    <value>
XAML analysis seems to be running slower than expected.
If you're noticing an issue, you can disable automatic analysis every time a file is saved. Go to : Tools &gt; Options &gt; Rapid XAML &gt; Analysis</value>
  </data>
  <data name="Info_LaunchVersionEditorExtras" xml:space="preserve">
    <value>Rapid XAML Editor Extras (v{0})</value>
  </data>
  <data name="Info_UnknownCustomActionType" xml:space="preserve">
    <value>"Unknown functionality defined in CustomAnalysis. Try updating the extension."</value>
  </data>
  <data name="UI_XamlAnalysisXfImageFilenameDescription" xml:space="preserve">
    <value>Filename may not work on all platforms.</value>
  </data>
  <data name="UI_XamlAnalysisXfImageFilenameExtendedMessage" xml:space="preserve">
    <value>Android drawables have strict naming restrictions. The filename being used breaks these restrictions and so you won't be able to use the same filename for all platforms.</value>
  </data>
  <data name="UI_XamlAnalysisXfLineDescription" xml:space="preserve">
    <value>Setting the Fill property of a Line is unnecessary as it has no effect.</value>
  </data>
  <data name="UI_XamlAnalysisXfLineToolTip" xml:space="preserve">
    <value>Remove Fill attribute.</value>
  </data>
  <data name="Info_PromptAnalysisRunningSlow" xml:space="preserve">
    <value>XAML analysis seems to be running slower than expected.</value>
  </data>
  <data name="Info_PromptDisableAnalysisOnSave" xml:space="preserve">
    <value>Disable analysis when save file</value>
  </data>
  <data name="UI_XamlAnalysisXfMapPinDescription" xml:space="preserve">
    <value>Pin does not have a Label specified.</value>
  </data>
  <data name="UI_XamlAnalysisXfMapPinToolTip" xml:space="preserve">
    <value>Add Label attribute.</value>
  </data>
  <data name="UI_XamlAnalysisXfSliderMinMaxDescription" xml:space="preserve">
    <value>Slider has a Minimum value greater than Maximum.</value>
  </data>
  <data name="UI_XamlAnalysisXfSliderThumbColorDescription" xml:space="preserve">
    <value>ThumbColor will not be used as ThumbImageSource takes precedence.</value>
  </data>
  <data name="UI_XamlAnalysisXfSliderThumbColorToolTip" xml:space="preserve">
    <value>Remove ThumbColor attribute.</value>
  </data>
  <data name="UI_XamlAnalysisXfStepperMinMaxDescription" xml:space="preserve">
    <value>Stepper has a Minimum value greater than Maximum.</value>
  </data>
  <data name="UI_XamlAnalysisStyleColorContrastDescription" xml:space="preserve">
    <value>The contrast ratio is only {0}:1 which is below the recommended level of 4.5:1.</value>
  </data>
  <data name="UI_XamlAnalysisStyleColorContrastExtendedMessage" xml:space="preserve">
    <value>The WCAG recommend a luminance contrast ratio of at least 4.5:1 for normal-size text.</value>
  </data>
  <data name="Info_UnableToRetrieveEditorDocument" xml:space="preserve">
    <value>Unable to retrieve the latest version of the document from the editor.</value>
  </data>
  <data name="Info_LaunchVersionRxt" xml:space="preserve">
    <value>Rapid XAML Toolkit (v{0})</value>
  </data>
  <data name="UI_XamlAnalysisTextBoxA11yNameMissingDescription" xml:space="preserve">
    <value>Focusable element (TextBox) is missing a name.</value>
  </data>
  <data name="UI_XamlAnalysisTextBoxA11yNameMissingExtendedMessage" xml:space="preserve">
    <value>The Name of a focusable element must not be null. Provide a UI Automation Name property that concisely identifies the element.</value>
  </data>
  <data name="UI_XamlAnalysisTextBoxA11yNameMissingToolTip" xml:space="preserve">
    <value>Add automation name.</value>
  </data>
</root>